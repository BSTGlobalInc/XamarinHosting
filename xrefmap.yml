### YamlMime:XRefMap
sorted: true
references:
- uid: Microsoft.Extensions.Hosting
  name: Microsoft.Extensions.Hosting
  href: api/Microsoft.Extensions.Hosting.html
  commentId: N:Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
- uid: Microsoft.Extensions.Hosting.HostBuilderExtensions
  name: HostBuilderExtensions
  href: api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html
  commentId: T:Microsoft.Extensions.Hosting.HostBuilderExtensions
  fullName: Microsoft.Extensions.Hosting.HostBuilderExtensions
  nameWithType: HostBuilderExtensions
- uid: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseHostedService*
  name: UseHostedService
  href: api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html#Microsoft_Extensions_Hosting_HostBuilderExtensions_UseHostedService_
  commentId: Overload:Microsoft.Extensions.Hosting.HostBuilderExtensions.UseHostedService
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseHostedService
  nameWithType: HostBuilderExtensions.UseHostedService
- uid: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseHostedService``1(Microsoft.Extensions.Hosting.IHostBuilder)
  name: UseHostedService<T>(IHostBuilder)
  href: api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html#Microsoft_Extensions_Hosting_HostBuilderExtensions_UseHostedService__1_Microsoft_Extensions_Hosting_IHostBuilder_
  commentId: M:Microsoft.Extensions.Hosting.HostBuilderExtensions.UseHostedService``1(Microsoft.Extensions.Hosting.IHostBuilder)
  name.vb: UseHostedService(Of T)(IHostBuilder)
  fullName: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseHostedService<T>(Microsoft.Extensions.Hosting.IHostBuilder)
  fullName.vb: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseHostedService(Of T)(Microsoft.Extensions.Hosting.IHostBuilder)
  nameWithType: HostBuilderExtensions.UseHostedService<T>(IHostBuilder)
  nameWithType.vb: HostBuilderExtensions.UseHostedService(Of T)(IHostBuilder)
- uid: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseXamarinLifetime*
  name: UseXamarinLifetime
  href: api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html#Microsoft_Extensions_Hosting_HostBuilderExtensions_UseXamarinLifetime_
  commentId: Overload:Microsoft.Extensions.Hosting.HostBuilderExtensions.UseXamarinLifetime
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseXamarinLifetime
  nameWithType: HostBuilderExtensions.UseXamarinLifetime
- uid: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseXamarinLifetime``1(Microsoft.Extensions.Hosting.IHostBuilder)
  name: UseXamarinLifetime<TApplication>(IHostBuilder)
  href: api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html#Microsoft_Extensions_Hosting_HostBuilderExtensions_UseXamarinLifetime__1_Microsoft_Extensions_Hosting_IHostBuilder_
  commentId: M:Microsoft.Extensions.Hosting.HostBuilderExtensions.UseXamarinLifetime``1(Microsoft.Extensions.Hosting.IHostBuilder)
  name.vb: UseXamarinLifetime(Of TApplication)(IHostBuilder)
  fullName: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseXamarinLifetime<TApplication>(Microsoft.Extensions.Hosting.IHostBuilder)
  fullName.vb: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseXamarinLifetime(Of TApplication)(Microsoft.Extensions.Hosting.IHostBuilder)
  nameWithType: HostBuilderExtensions.UseXamarinLifetime<TApplication>(IHostBuilder)
  nameWithType.vb: HostBuilderExtensions.UseXamarinLifetime(Of TApplication)(IHostBuilder)
- uid: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseXamarinLifetime``1(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.XamarinHostLifetime})
  name: UseXamarinLifetime<TApplication>(IHostBuilder, Action<XamarinHostLifetime>)
  href: api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html#Microsoft_Extensions_Hosting_HostBuilderExtensions_UseXamarinLifetime__1_Microsoft_Extensions_Hosting_IHostBuilder_System_Action_Microsoft_Extensions_Hosting_XamarinHostLifetime__
  commentId: M:Microsoft.Extensions.Hosting.HostBuilderExtensions.UseXamarinLifetime``1(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.XamarinHostLifetime})
  name.vb: UseXamarinLifetime(Of TApplication)(IHostBuilder, Action(Of XamarinHostLifetime))
  fullName: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseXamarinLifetime<TApplication>(Microsoft.Extensions.Hosting.IHostBuilder, System.Action<Microsoft.Extensions.Hosting.XamarinHostLifetime>)
  fullName.vb: Microsoft.Extensions.Hosting.HostBuilderExtensions.UseXamarinLifetime(Of TApplication)(Microsoft.Extensions.Hosting.IHostBuilder, System.Action(Of Microsoft.Extensions.Hosting.XamarinHostLifetime))
  nameWithType: HostBuilderExtensions.UseXamarinLifetime<TApplication>(IHostBuilder, Action<XamarinHostLifetime>)
  nameWithType.vb: HostBuilderExtensions.UseXamarinLifetime(Of TApplication)(IHostBuilder, Action(Of XamarinHostLifetime))
- uid: Microsoft.Extensions.Hosting.HostExtensions
  name: HostExtensions
  href: api/Microsoft.Extensions.Hosting.HostExtensions.html
  commentId: T:Microsoft.Extensions.Hosting.HostExtensions
  fullName: Microsoft.Extensions.Hosting.HostExtensions
  nameWithType: HostExtensions
- uid: Microsoft.Extensions.Hosting.HostExtensions.Resume(Microsoft.Extensions.Hosting.IHost)
  name: Resume(IHost)
  href: api/Microsoft.Extensions.Hosting.HostExtensions.html#Microsoft_Extensions_Hosting_HostExtensions_Resume_Microsoft_Extensions_Hosting_IHost_
  commentId: M:Microsoft.Extensions.Hosting.HostExtensions.Resume(Microsoft.Extensions.Hosting.IHost)
  fullName: Microsoft.Extensions.Hosting.HostExtensions.Resume(Microsoft.Extensions.Hosting.IHost)
  nameWithType: HostExtensions.Resume(IHost)
- uid: Microsoft.Extensions.Hosting.HostExtensions.Resume*
  name: Resume
  href: api/Microsoft.Extensions.Hosting.HostExtensions.html#Microsoft_Extensions_Hosting_HostExtensions_Resume_
  commentId: Overload:Microsoft.Extensions.Hosting.HostExtensions.Resume
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.HostExtensions.Resume
  nameWithType: HostExtensions.Resume
- uid: Microsoft.Extensions.Hosting.HostExtensions.ResumeAsync(Microsoft.Extensions.Hosting.IHost,System.Threading.CancellationToken)
  name: ResumeAsync(IHost, CancellationToken)
  href: api/Microsoft.Extensions.Hosting.HostExtensions.html#Microsoft_Extensions_Hosting_HostExtensions_ResumeAsync_Microsoft_Extensions_Hosting_IHost_System_Threading_CancellationToken_
  commentId: M:Microsoft.Extensions.Hosting.HostExtensions.ResumeAsync(Microsoft.Extensions.Hosting.IHost,System.Threading.CancellationToken)
  fullName: Microsoft.Extensions.Hosting.HostExtensions.ResumeAsync(Microsoft.Extensions.Hosting.IHost, System.Threading.CancellationToken)
  nameWithType: HostExtensions.ResumeAsync(IHost, CancellationToken)
- uid: Microsoft.Extensions.Hosting.HostExtensions.ResumeAsync*
  name: ResumeAsync
  href: api/Microsoft.Extensions.Hosting.HostExtensions.html#Microsoft_Extensions_Hosting_HostExtensions_ResumeAsync_
  commentId: Overload:Microsoft.Extensions.Hosting.HostExtensions.ResumeAsync
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.HostExtensions.ResumeAsync
  nameWithType: HostExtensions.ResumeAsync
- uid: Microsoft.Extensions.Hosting.HostExtensions.Sleep(Microsoft.Extensions.Hosting.IHost)
  name: Sleep(IHost)
  href: api/Microsoft.Extensions.Hosting.HostExtensions.html#Microsoft_Extensions_Hosting_HostExtensions_Sleep_Microsoft_Extensions_Hosting_IHost_
  commentId: M:Microsoft.Extensions.Hosting.HostExtensions.Sleep(Microsoft.Extensions.Hosting.IHost)
  fullName: Microsoft.Extensions.Hosting.HostExtensions.Sleep(Microsoft.Extensions.Hosting.IHost)
  nameWithType: HostExtensions.Sleep(IHost)
- uid: Microsoft.Extensions.Hosting.HostExtensions.Sleep*
  name: Sleep
  href: api/Microsoft.Extensions.Hosting.HostExtensions.html#Microsoft_Extensions_Hosting_HostExtensions_Sleep_
  commentId: Overload:Microsoft.Extensions.Hosting.HostExtensions.Sleep
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.HostExtensions.Sleep
  nameWithType: HostExtensions.Sleep
- uid: Microsoft.Extensions.Hosting.HostExtensions.SleepAsync(Microsoft.Extensions.Hosting.IHost,System.Threading.CancellationToken)
  name: SleepAsync(IHost, CancellationToken)
  href: api/Microsoft.Extensions.Hosting.HostExtensions.html#Microsoft_Extensions_Hosting_HostExtensions_SleepAsync_Microsoft_Extensions_Hosting_IHost_System_Threading_CancellationToken_
  commentId: M:Microsoft.Extensions.Hosting.HostExtensions.SleepAsync(Microsoft.Extensions.Hosting.IHost,System.Threading.CancellationToken)
  fullName: Microsoft.Extensions.Hosting.HostExtensions.SleepAsync(Microsoft.Extensions.Hosting.IHost, System.Threading.CancellationToken)
  nameWithType: HostExtensions.SleepAsync(IHost, CancellationToken)
- uid: Microsoft.Extensions.Hosting.HostExtensions.SleepAsync*
  name: SleepAsync
  href: api/Microsoft.Extensions.Hosting.HostExtensions.html#Microsoft_Extensions_Hosting_HostExtensions_SleepAsync_
  commentId: Overload:Microsoft.Extensions.Hosting.HostExtensions.SleepAsync
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.HostExtensions.SleepAsync
  nameWithType: HostExtensions.SleepAsync
- uid: Microsoft.Extensions.Hosting.ILifecycleRegister
  name: ILifecycleRegister
  href: api/Microsoft.Extensions.Hosting.ILifecycleRegister.html
  commentId: T:Microsoft.Extensions.Hosting.ILifecycleRegister
  fullName: Microsoft.Extensions.Hosting.ILifecycleRegister
  nameWithType: ILifecycleRegister
- uid: Microsoft.Extensions.Hosting.ILifecycleRegister.Register(System.Action)
  name: Register(Action)
  href: api/Microsoft.Extensions.Hosting.ILifecycleRegister.html#Microsoft_Extensions_Hosting_ILifecycleRegister_Register_System_Action_
  commentId: M:Microsoft.Extensions.Hosting.ILifecycleRegister.Register(System.Action)
  fullName: Microsoft.Extensions.Hosting.ILifecycleRegister.Register(System.Action)
  nameWithType: ILifecycleRegister.Register(Action)
- uid: Microsoft.Extensions.Hosting.ILifecycleRegister.Register*
  name: Register
  href: api/Microsoft.Extensions.Hosting.ILifecycleRegister.html#Microsoft_Extensions_Hosting_ILifecycleRegister_Register_
  commentId: Overload:Microsoft.Extensions.Hosting.ILifecycleRegister.Register
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.ILifecycleRegister.Register
  nameWithType: ILifecycleRegister.Register
- uid: Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime
  name: IXamarinHostApplicationLifetime
  href: api/Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.html
  commentId: T:Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime
  fullName: Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime
  nameWithType: IXamarinHostApplicationLifetime
- uid: Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationResuming
  name: ApplicationResuming
  href: api/Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_IXamarinHostApplicationLifetime_ApplicationResuming
  commentId: P:Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationResuming
  fullName: Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationResuming
  nameWithType: IXamarinHostApplicationLifetime.ApplicationResuming
- uid: Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationResuming*
  name: ApplicationResuming
  href: api/Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_IXamarinHostApplicationLifetime_ApplicationResuming_
  commentId: Overload:Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationResuming
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationResuming
  nameWithType: IXamarinHostApplicationLifetime.ApplicationResuming
- uid: Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationSleeping
  name: ApplicationSleeping
  href: api/Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_IXamarinHostApplicationLifetime_ApplicationSleeping
  commentId: P:Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationSleeping
  fullName: Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationSleeping
  nameWithType: IXamarinHostApplicationLifetime.ApplicationSleeping
- uid: Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationSleeping*
  name: ApplicationSleeping
  href: api/Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_IXamarinHostApplicationLifetime_ApplicationSleeping_
  commentId: Overload:Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationSleeping
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.IXamarinHostApplicationLifetime.ApplicationSleeping
  nameWithType: IXamarinHostApplicationLifetime.ApplicationSleeping
- uid: Microsoft.Extensions.Hosting.IXamarinHostedService
  name: IXamarinHostedService
  href: api/Microsoft.Extensions.Hosting.IXamarinHostedService.html
  commentId: T:Microsoft.Extensions.Hosting.IXamarinHostedService
  fullName: Microsoft.Extensions.Hosting.IXamarinHostedService
  nameWithType: IXamarinHostedService
- uid: Microsoft.Extensions.Hosting.IXamarinHostedService.ResumeAsync(System.Threading.CancellationToken)
  name: ResumeAsync(CancellationToken)
  href: api/Microsoft.Extensions.Hosting.IXamarinHostedService.html#Microsoft_Extensions_Hosting_IXamarinHostedService_ResumeAsync_System_Threading_CancellationToken_
  commentId: M:Microsoft.Extensions.Hosting.IXamarinHostedService.ResumeAsync(System.Threading.CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IXamarinHostedService.ResumeAsync(System.Threading.CancellationToken)
  nameWithType: IXamarinHostedService.ResumeAsync(CancellationToken)
- uid: Microsoft.Extensions.Hosting.IXamarinHostedService.ResumeAsync*
  name: ResumeAsync
  href: api/Microsoft.Extensions.Hosting.IXamarinHostedService.html#Microsoft_Extensions_Hosting_IXamarinHostedService_ResumeAsync_
  commentId: Overload:Microsoft.Extensions.Hosting.IXamarinHostedService.ResumeAsync
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.IXamarinHostedService.ResumeAsync
  nameWithType: IXamarinHostedService.ResumeAsync
- uid: Microsoft.Extensions.Hosting.IXamarinHostedService.SleepAsync(System.Threading.CancellationToken)
  name: SleepAsync(CancellationToken)
  href: api/Microsoft.Extensions.Hosting.IXamarinHostedService.html#Microsoft_Extensions_Hosting_IXamarinHostedService_SleepAsync_System_Threading_CancellationToken_
  commentId: M:Microsoft.Extensions.Hosting.IXamarinHostedService.SleepAsync(System.Threading.CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IXamarinHostedService.SleepAsync(System.Threading.CancellationToken)
  nameWithType: IXamarinHostedService.SleepAsync(CancellationToken)
- uid: Microsoft.Extensions.Hosting.IXamarinHostedService.SleepAsync*
  name: SleepAsync
  href: api/Microsoft.Extensions.Hosting.IXamarinHostedService.html#Microsoft_Extensions_Hosting_IXamarinHostedService_SleepAsync_
  commentId: Overload:Microsoft.Extensions.Hosting.IXamarinHostedService.SleepAsync
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.IXamarinHostedService.SleepAsync
  nameWithType: IXamarinHostedService.SleepAsync
- uid: Microsoft.Extensions.Hosting.LifecycleRegister
  name: LifecycleRegister
  href: api/Microsoft.Extensions.Hosting.LifecycleRegister.html
  commentId: T:Microsoft.Extensions.Hosting.LifecycleRegister
  fullName: Microsoft.Extensions.Hosting.LifecycleRegister
  nameWithType: LifecycleRegister
- uid: Microsoft.Extensions.Hosting.LifecycleRegister.Notify
  name: Notify()
  href: api/Microsoft.Extensions.Hosting.LifecycleRegister.html#Microsoft_Extensions_Hosting_LifecycleRegister_Notify
  commentId: M:Microsoft.Extensions.Hosting.LifecycleRegister.Notify
  fullName: Microsoft.Extensions.Hosting.LifecycleRegister.Notify()
  nameWithType: LifecycleRegister.Notify()
- uid: Microsoft.Extensions.Hosting.LifecycleRegister.Notify*
  name: Notify
  href: api/Microsoft.Extensions.Hosting.LifecycleRegister.html#Microsoft_Extensions_Hosting_LifecycleRegister_Notify_
  commentId: Overload:Microsoft.Extensions.Hosting.LifecycleRegister.Notify
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.LifecycleRegister.Notify
  nameWithType: LifecycleRegister.Notify
- uid: Microsoft.Extensions.Hosting.LifecycleRegister.Register(System.Action)
  name: Register(Action)
  href: api/Microsoft.Extensions.Hosting.LifecycleRegister.html#Microsoft_Extensions_Hosting_LifecycleRegister_Register_System_Action_
  commentId: M:Microsoft.Extensions.Hosting.LifecycleRegister.Register(System.Action)
  fullName: Microsoft.Extensions.Hosting.LifecycleRegister.Register(System.Action)
  nameWithType: LifecycleRegister.Register(Action)
- uid: Microsoft.Extensions.Hosting.LifecycleRegister.Register*
  name: Register
  href: api/Microsoft.Extensions.Hosting.LifecycleRegister.html#Microsoft_Extensions_Hosting_LifecycleRegister_Register_
  commentId: Overload:Microsoft.Extensions.Hosting.LifecycleRegister.Register
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.LifecycleRegister.Register
  nameWithType: LifecycleRegister.Register
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService
  name: XamarinBackgroundService
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html
  commentId: T:Microsoft.Extensions.Hosting.XamarinBackgroundService
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService
  nameWithType: XamarinBackgroundService
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.Dispose
  name: Dispose()
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_Dispose
  commentId: M:Microsoft.Extensions.Hosting.XamarinBackgroundService.Dispose
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.Dispose()
  nameWithType: XamarinBackgroundService.Dispose()
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.Dispose*
  name: Dispose
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_Dispose_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinBackgroundService.Dispose
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.Dispose
  nameWithType: XamarinBackgroundService.Dispose
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  name: ExecuteAsync(CancellationToken)
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_ExecuteAsync_System_Threading_CancellationToken_
  commentId: M:Microsoft.Extensions.Hosting.XamarinBackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  nameWithType: XamarinBackgroundService.ExecuteAsync(CancellationToken)
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.ExecuteAsync*
  name: ExecuteAsync
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_ExecuteAsync_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinBackgroundService.ExecuteAsync
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.ExecuteAsync
  nameWithType: XamarinBackgroundService.ExecuteAsync
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.ResumeAsync(System.Threading.CancellationToken)
  name: ResumeAsync(CancellationToken)
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_ResumeAsync_System_Threading_CancellationToken_
  commentId: M:Microsoft.Extensions.Hosting.XamarinBackgroundService.ResumeAsync(System.Threading.CancellationToken)
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.ResumeAsync(System.Threading.CancellationToken)
  nameWithType: XamarinBackgroundService.ResumeAsync(CancellationToken)
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.ResumeAsync*
  name: ResumeAsync
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_ResumeAsync_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinBackgroundService.ResumeAsync
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.ResumeAsync
  nameWithType: XamarinBackgroundService.ResumeAsync
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.SleepAsync(System.Threading.CancellationToken)
  name: SleepAsync(CancellationToken)
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_SleepAsync_System_Threading_CancellationToken_
  commentId: M:Microsoft.Extensions.Hosting.XamarinBackgroundService.SleepAsync(System.Threading.CancellationToken)
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.SleepAsync(System.Threading.CancellationToken)
  nameWithType: XamarinBackgroundService.SleepAsync(CancellationToken)
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.SleepAsync*
  name: SleepAsync
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_SleepAsync_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinBackgroundService.SleepAsync
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.SleepAsync
  nameWithType: XamarinBackgroundService.SleepAsync
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.StartAsync(System.Threading.CancellationToken)
  name: StartAsync(CancellationToken)
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_StartAsync_System_Threading_CancellationToken_
  commentId: M:Microsoft.Extensions.Hosting.XamarinBackgroundService.StartAsync(System.Threading.CancellationToken)
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.StartAsync(System.Threading.CancellationToken)
  nameWithType: XamarinBackgroundService.StartAsync(CancellationToken)
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.StartAsync*
  name: StartAsync
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_StartAsync_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinBackgroundService.StartAsync
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.StartAsync
  nameWithType: XamarinBackgroundService.StartAsync
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.StopAsync(System.Threading.CancellationToken)
  name: StopAsync(CancellationToken)
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_StopAsync_System_Threading_CancellationToken_
  commentId: M:Microsoft.Extensions.Hosting.XamarinBackgroundService.StopAsync(System.Threading.CancellationToken)
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.StopAsync(System.Threading.CancellationToken)
  nameWithType: XamarinBackgroundService.StopAsync(CancellationToken)
- uid: Microsoft.Extensions.Hosting.XamarinBackgroundService.StopAsync*
  name: StopAsync
  href: api/Microsoft.Extensions.Hosting.XamarinBackgroundService.html#Microsoft_Extensions_Hosting_XamarinBackgroundService_StopAsync_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinBackgroundService.StopAsync
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinBackgroundService.StopAsync
  nameWithType: XamarinBackgroundService.StopAsync
- uid: Microsoft.Extensions.Hosting.XamarinHost
  name: XamarinHost
  href: api/Microsoft.Extensions.Hosting.XamarinHost.html
  commentId: T:Microsoft.Extensions.Hosting.XamarinHost
  fullName: Microsoft.Extensions.Hosting.XamarinHost
  nameWithType: XamarinHost
- uid: Microsoft.Extensions.Hosting.XamarinHost.CreateDefaultBuilder*
  name: CreateDefaultBuilder
  href: api/Microsoft.Extensions.Hosting.XamarinHost.html#Microsoft_Extensions_Hosting_XamarinHost_CreateDefaultBuilder_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinHost.CreateDefaultBuilder
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinHost.CreateDefaultBuilder
  nameWithType: XamarinHost.CreateDefaultBuilder
- uid: Microsoft.Extensions.Hosting.XamarinHost.CreateDefaultBuilder``1
  name: CreateDefaultBuilder<TApplication>()
  href: api/Microsoft.Extensions.Hosting.XamarinHost.html#Microsoft_Extensions_Hosting_XamarinHost_CreateDefaultBuilder__1
  commentId: M:Microsoft.Extensions.Hosting.XamarinHost.CreateDefaultBuilder``1
  name.vb: CreateDefaultBuilder(Of TApplication)()
  fullName: Microsoft.Extensions.Hosting.XamarinHost.CreateDefaultBuilder<TApplication>()
  fullName.vb: Microsoft.Extensions.Hosting.XamarinHost.CreateDefaultBuilder(Of TApplication)()
  nameWithType: XamarinHost.CreateDefaultBuilder<TApplication>()
  nameWithType.vb: XamarinHost.CreateDefaultBuilder(Of TApplication)()
- uid: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime
  name: XamarinHostApplicationLifetime
  href: api/Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.html
  commentId: T:Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime
  fullName: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime
  nameWithType: XamarinHostApplicationLifetime
- uid: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.Extensions.Hosting.Internal.ApplicationLifetime})
  name: XamarinHostApplicationLifetime(ILogger<ApplicationLifetime>)
  href: api/Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_XamarinHostApplicationLifetime__ctor_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Hosting_Internal_ApplicationLifetime__
  commentId: M:Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.Extensions.Hosting.Internal.ApplicationLifetime})
  name.vb: XamarinHostApplicationLifetime(ILogger(Of ApplicationLifetime))
  fullName: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.XamarinHostApplicationLifetime(Microsoft.Extensions.Logging.ILogger<Microsoft.Extensions.Hosting.Internal.ApplicationLifetime>)
  fullName.vb: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.XamarinHostApplicationLifetime(Microsoft.Extensions.Logging.ILogger(Of Microsoft.Extensions.Hosting.Internal.ApplicationLifetime))
  nameWithType: XamarinHostApplicationLifetime.XamarinHostApplicationLifetime(ILogger<ApplicationLifetime>)
  nameWithType.vb: XamarinHostApplicationLifetime.XamarinHostApplicationLifetime(ILogger(Of ApplicationLifetime))
- uid: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.#ctor*
  name: XamarinHostApplicationLifetime
  href: api/Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_XamarinHostApplicationLifetime__ctor_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.#ctor
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.XamarinHostApplicationLifetime
  nameWithType: XamarinHostApplicationLifetime.XamarinHostApplicationLifetime
- uid: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationResuming
  name: ApplicationResuming
  href: api/Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_XamarinHostApplicationLifetime_ApplicationResuming
  commentId: P:Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationResuming
  fullName: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationResuming
  nameWithType: XamarinHostApplicationLifetime.ApplicationResuming
- uid: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationResuming*
  name: ApplicationResuming
  href: api/Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_XamarinHostApplicationLifetime_ApplicationResuming_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationResuming
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationResuming
  nameWithType: XamarinHostApplicationLifetime.ApplicationResuming
- uid: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationSleeping
  name: ApplicationSleeping
  href: api/Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_XamarinHostApplicationLifetime_ApplicationSleeping
  commentId: P:Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationSleeping
  fullName: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationSleeping
  nameWithType: XamarinHostApplicationLifetime.ApplicationSleeping
- uid: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationSleeping*
  name: ApplicationSleeping
  href: api/Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_XamarinHostApplicationLifetime_ApplicationSleeping_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationSleeping
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.ApplicationSleeping
  nameWithType: XamarinHostApplicationLifetime.ApplicationSleeping
- uid: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifyResuming
  name: NotifyResuming()
  href: api/Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_XamarinHostApplicationLifetime_NotifyResuming
  commentId: M:Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifyResuming
  fullName: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifyResuming()
  nameWithType: XamarinHostApplicationLifetime.NotifyResuming()
- uid: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifyResuming*
  name: NotifyResuming
  href: api/Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_XamarinHostApplicationLifetime_NotifyResuming_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifyResuming
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifyResuming
  nameWithType: XamarinHostApplicationLifetime.NotifyResuming
- uid: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifySleeping
  name: NotifySleeping()
  href: api/Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_XamarinHostApplicationLifetime_NotifySleeping
  commentId: M:Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifySleeping
  fullName: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifySleeping()
  nameWithType: XamarinHostApplicationLifetime.NotifySleeping()
- uid: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifySleeping*
  name: NotifySleeping
  href: api/Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.html#Microsoft_Extensions_Hosting_XamarinHostApplicationLifetime_NotifySleeping_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifySleeping
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinHostApplicationLifetime.NotifySleeping
  nameWithType: XamarinHostApplicationLifetime.NotifySleeping
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetime
  name: XamarinHostLifetime
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetime.html
  commentId: T:Microsoft.Extensions.Hosting.XamarinHostLifetime
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetime
  nameWithType: XamarinHostLifetime
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetime.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime)
  name: XamarinHostLifetime(IOptions<XamarinHostLifetimeOptions>, IHostEnvironment, IHostApplicationLifetime)
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetime.html#Microsoft_Extensions_Hosting_XamarinHostLifetime__ctor_Microsoft_Extensions_Options_IOptions_Microsoft_Extensions_Hosting_XamarinHostLifetimeOptions__Microsoft_Extensions_Hosting_IHostEnvironment_Microsoft_Extensions_Hosting_IHostApplicationLifetime_
  commentId: M:Microsoft.Extensions.Hosting.XamarinHostLifetime.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime)
  name.vb: XamarinHostLifetime(IOptions(Of XamarinHostLifetimeOptions), IHostEnvironment, IHostApplicationLifetime)
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetime.XamarinHostLifetime(Microsoft.Extensions.Options.IOptions<Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions>, Microsoft.Extensions.Hosting.IHostEnvironment, Microsoft.Extensions.Hosting.IHostApplicationLifetime)
  fullName.vb: Microsoft.Extensions.Hosting.XamarinHostLifetime.XamarinHostLifetime(Microsoft.Extensions.Options.IOptions(Of Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions), Microsoft.Extensions.Hosting.IHostEnvironment, Microsoft.Extensions.Hosting.IHostApplicationLifetime)
  nameWithType: XamarinHostLifetime.XamarinHostLifetime(IOptions<XamarinHostLifetimeOptions>, IHostEnvironment, IHostApplicationLifetime)
  nameWithType.vb: XamarinHostLifetime.XamarinHostLifetime(IOptions(Of XamarinHostLifetimeOptions), IHostEnvironment, IHostApplicationLifetime)
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetime.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Logging.ILoggerFactory)
  name: XamarinHostLifetime(IOptions<XamarinHostLifetimeOptions>, IHostEnvironment, IHostApplicationLifetime, ILoggerFactory)
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetime.html#Microsoft_Extensions_Hosting_XamarinHostLifetime__ctor_Microsoft_Extensions_Options_IOptions_Microsoft_Extensions_Hosting_XamarinHostLifetimeOptions__Microsoft_Extensions_Hosting_IHostEnvironment_Microsoft_Extensions_Hosting_IHostApplicationLifetime_Microsoft_Extensions_Logging_ILoggerFactory_
  commentId: M:Microsoft.Extensions.Hosting.XamarinHostLifetime.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: XamarinHostLifetime(IOptions(Of XamarinHostLifetimeOptions), IHostEnvironment, IHostApplicationLifetime, ILoggerFactory)
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetime.XamarinHostLifetime(Microsoft.Extensions.Options.IOptions<Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions>, Microsoft.Extensions.Hosting.IHostEnvironment, Microsoft.Extensions.Hosting.IHostApplicationLifetime, Microsoft.Extensions.Logging.ILoggerFactory)
  fullName.vb: Microsoft.Extensions.Hosting.XamarinHostLifetime.XamarinHostLifetime(Microsoft.Extensions.Options.IOptions(Of Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions), Microsoft.Extensions.Hosting.IHostEnvironment, Microsoft.Extensions.Hosting.IHostApplicationLifetime, Microsoft.Extensions.Logging.ILoggerFactory)
  nameWithType: XamarinHostLifetime.XamarinHostLifetime(IOptions<XamarinHostLifetimeOptions>, IHostEnvironment, IHostApplicationLifetime, ILoggerFactory)
  nameWithType.vb: XamarinHostLifetime.XamarinHostLifetime(IOptions(Of XamarinHostLifetimeOptions), IHostEnvironment, IHostApplicationLifetime, ILoggerFactory)
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetime.#ctor*
  name: XamarinHostLifetime
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetime.html#Microsoft_Extensions_Hosting_XamarinHostLifetime__ctor_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinHostLifetime.#ctor
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetime.XamarinHostLifetime
  nameWithType: XamarinHostLifetime.XamarinHostLifetime
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetime.Dispose
  name: Dispose()
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetime.html#Microsoft_Extensions_Hosting_XamarinHostLifetime_Dispose
  commentId: M:Microsoft.Extensions.Hosting.XamarinHostLifetime.Dispose
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetime.Dispose()
  nameWithType: XamarinHostLifetime.Dispose()
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetime.Dispose*
  name: Dispose
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetime.html#Microsoft_Extensions_Hosting_XamarinHostLifetime_Dispose_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinHostLifetime.Dispose
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetime.Dispose
  nameWithType: XamarinHostLifetime.Dispose
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetime.StopAsync(System.Threading.CancellationToken)
  name: StopAsync(CancellationToken)
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetime.html#Microsoft_Extensions_Hosting_XamarinHostLifetime_StopAsync_System_Threading_CancellationToken_
  commentId: M:Microsoft.Extensions.Hosting.XamarinHostLifetime.StopAsync(System.Threading.CancellationToken)
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetime.StopAsync(System.Threading.CancellationToken)
  nameWithType: XamarinHostLifetime.StopAsync(CancellationToken)
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetime.StopAsync*
  name: StopAsync
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetime.html#Microsoft_Extensions_Hosting_XamarinHostLifetime_StopAsync_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinHostLifetime.StopAsync
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetime.StopAsync
  nameWithType: XamarinHostLifetime.StopAsync
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetime.WaitForStartAsync(System.Threading.CancellationToken)
  name: WaitForStartAsync(CancellationToken)
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetime.html#Microsoft_Extensions_Hosting_XamarinHostLifetime_WaitForStartAsync_System_Threading_CancellationToken_
  commentId: M:Microsoft.Extensions.Hosting.XamarinHostLifetime.WaitForStartAsync(System.Threading.CancellationToken)
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetime.WaitForStartAsync(System.Threading.CancellationToken)
  nameWithType: XamarinHostLifetime.WaitForStartAsync(CancellationToken)
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetime.WaitForStartAsync*
  name: WaitForStartAsync
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetime.html#Microsoft_Extensions_Hosting_XamarinHostLifetime_WaitForStartAsync_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinHostLifetime.WaitForStartAsync
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetime.WaitForStartAsync
  nameWithType: XamarinHostLifetime.WaitForStartAsync
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions
  name: XamarinHostLifetimeOptions
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions.html
  commentId: T:Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions
  nameWithType: XamarinHostLifetimeOptions
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions.SuppressStatusMessages
  name: SuppressStatusMessages
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions.html#Microsoft_Extensions_Hosting_XamarinHostLifetimeOptions_SuppressStatusMessages
  commentId: P:Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions.SuppressStatusMessages
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions.SuppressStatusMessages
  nameWithType: XamarinHostLifetimeOptions.SuppressStatusMessages
- uid: Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions.SuppressStatusMessages*
  name: SuppressStatusMessages
  href: api/Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions.html#Microsoft_Extensions_Hosting_XamarinHostLifetimeOptions_SuppressStatusMessages_
  commentId: Overload:Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions.SuppressStatusMessages
  isSpec: "True"
  fullName: Microsoft.Extensions.Hosting.XamarinHostLifetimeOptions.SuppressStatusMessages
  nameWithType: XamarinHostLifetimeOptions.SuppressStatusMessages
